{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u4f7f\u7528 Proxy Pool \u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u4e14\u6613\u4e8e\u6269\u5c55\u7684\u4ee3\u7406\u6c60\u9879\u76ee\u3002","title":"\u9996\u9875"},{"location":"#proxy-pool","text":"\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u4e14\u6613\u4e8e\u6269\u5c55\u7684\u4ee3\u7406\u6c60\u9879\u76ee\u3002","title":"\u6b22\u8fce\u4f7f\u7528 Proxy Pool"},{"location":"api_reference/","text":"API \u53c2\u8003 Proxy Pool \u901a\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 Flask Web \u5e94\u7528\u63d0\u4f9b HTTP API\uff0c\u65b9\u4fbf\u4f60\u5feb\u901f\u5730\u83b7\u53d6\u548c\u7ba1\u7406\u4ee3\u7406\u3002 \u83b7\u53d6\u4e00\u4e2a\u4ee3\u7406 URL : /get/ Method : GET Description : \u968f\u673a\u4ece\u4ee3\u7406\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u53ef\u7528\u4ee3\u7406\u3002 URL Params : type (optional): https \u6216\u7a7a\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a https \uff0c\u5219\u53ea\u8fd4\u56de\u652f\u6301 HTTPS \u7684\u4ee3\u7406\u3002 Success Response : Code : 200 Content : json { \"proxy\": \"123.45.67.89:8080\", \"https\" : true, \"source\": \"freeProxy01\", \"region\": \"\u4e2d\u56fd \u4e0a\u6d77\", \"fail_count\": 0, \"last_time\": \"2025-08-03 09:10:00\" } Error Response (\u65e0\u53ef\u7528\u4ee3\u7406) : Code : 200 Content : {\"code\": 0, \"src\": \"no proxy\"} \u83b7\u53d6\u5e76\u5220\u9664\u4e00\u4e2a\u4ee3\u7406 URL : /pop/ Method : GET Description : \u4ece\u4ee3\u7406\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u4ee3\u7406\uff0c\u5e76\u7acb\u5373\u5c06\u5176\u5220\u9664\uff0c\u4ee5\u786e\u4fdd\u8be5\u4ee3\u7406\u53ea\u88ab\u4f7f\u7528\u4e00\u6b21\u3002 URL Params : type (optional): https \u6216\u7a7a\u3002 Success Response : \u540c /get/ \u3002 Error Response (\u65e0\u53ef\u7528\u4ee3\u7406) : \u540c /get/ \u3002 \u5220\u9664\u4e00\u4e2a\u4ee3\u7406 URL : /delete/ Method : GET Description : \u5f53\u4f60\u53d1\u73b0\u4e00\u4e2a\u4ee3\u7406\u4e0d\u53ef\u7528\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u5c06\u5176\u4ece\u4ee3\u7406\u6c60\u4e2d\u5220\u9664\u3002 URL Params : proxy (required): \u9700\u8981\u5220\u9664\u7684\u4ee3\u7406\uff0c\u683c\u5f0f\u4e3a ip:port \u3002\u4f8b\u5982: 127.0.0.1:8080 \u3002 Success Response : Code : 200 Content : {\"code\": 0, \"src\": \"delete proxy success\"} \u83b7\u53d6\u6240\u6709\u4ee3\u7406 URL : /all/ Method : GET Description : \u83b7\u53d6\u4ee3\u7406\u6c60\u4e2d\u7684\u6240\u6709\u4ee3\u7406\u4fe1\u606f\u3002 URL Params : type (optional): https \u6216\u7a7a\u3002 Success Response : Code : 200 Content : json [ { \"proxy\": \"123.45.67.89:8080\", \"https\": true, \"source\": \"freeProxy01\", \"region\": \"\u4e2d\u56fd \u4e0a\u6d77\", \"fail_count\": 0, \"last_time\": \"2025-08-03 09:10:00\" }, { \"proxy\": \"98.76.54.32:443\", \"https\": false, \"source\": \"freeProxy02\", \"region\": \"\u7f8e\u56fd \u52a0\u5dde\", \"fail_count\": 1, \"last_time\": \"2025-08-03 09:05:30\" } ] \u83b7\u53d6\u4ee3\u7406\u6570\u91cf\u7edf\u8ba1 URL : /count/ Method : GET Description : \u8fd4\u56de\u4ee3\u7406\u6c60\u4e2d\u4ee3\u7406\u7684\u603b\u6570\u3001\u6309\u7c7b\u578b\uff08HTTP/HTTPS\uff09\u548c\u6765\u6e90\u7684\u8be6\u7ec6\u7edf\u8ba1\u4fe1\u606f\u3002 Success Response : Code : 200 Content : ```json { \"count\": 120, \"http_type\": { \"http\": 80, \"https\": 40 }, \"source\": { \"freeProxy01\": 50, \"freeProxy02\": 70 } }","title":"API \u53c2\u8003"},{"location":"api_reference/#api","text":"Proxy Pool \u901a\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 Flask Web \u5e94\u7528\u63d0\u4f9b HTTP API\uff0c\u65b9\u4fbf\u4f60\u5feb\u901f\u5730\u83b7\u53d6\u548c\u7ba1\u7406\u4ee3\u7406\u3002","title":"API \u53c2\u8003"},{"location":"api_reference/#_1","text":"URL : /get/ Method : GET Description : \u968f\u673a\u4ece\u4ee3\u7406\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u53ef\u7528\u4ee3\u7406\u3002 URL Params : type (optional): https \u6216\u7a7a\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a https \uff0c\u5219\u53ea\u8fd4\u56de\u652f\u6301 HTTPS \u7684\u4ee3\u7406\u3002 Success Response : Code : 200 Content : json { \"proxy\": \"123.45.67.89:8080\", \"https\" : true, \"source\": \"freeProxy01\", \"region\": \"\u4e2d\u56fd \u4e0a\u6d77\", \"fail_count\": 0, \"last_time\": \"2025-08-03 09:10:00\" } Error Response (\u65e0\u53ef\u7528\u4ee3\u7406) : Code : 200 Content : {\"code\": 0, \"src\": \"no proxy\"}","title":"\u83b7\u53d6\u4e00\u4e2a\u4ee3\u7406"},{"location":"api_reference/#_2","text":"URL : /pop/ Method : GET Description : \u4ece\u4ee3\u7406\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u4ee3\u7406\uff0c\u5e76\u7acb\u5373\u5c06\u5176\u5220\u9664\uff0c\u4ee5\u786e\u4fdd\u8be5\u4ee3\u7406\u53ea\u88ab\u4f7f\u7528\u4e00\u6b21\u3002 URL Params : type (optional): https \u6216\u7a7a\u3002 Success Response : \u540c /get/ \u3002 Error Response (\u65e0\u53ef\u7528\u4ee3\u7406) : \u540c /get/ \u3002","title":"\u83b7\u53d6\u5e76\u5220\u9664\u4e00\u4e2a\u4ee3\u7406"},{"location":"api_reference/#_3","text":"URL : /delete/ Method : GET Description : \u5f53\u4f60\u53d1\u73b0\u4e00\u4e2a\u4ee3\u7406\u4e0d\u53ef\u7528\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u5c06\u5176\u4ece\u4ee3\u7406\u6c60\u4e2d\u5220\u9664\u3002 URL Params : proxy (required): \u9700\u8981\u5220\u9664\u7684\u4ee3\u7406\uff0c\u683c\u5f0f\u4e3a ip:port \u3002\u4f8b\u5982: 127.0.0.1:8080 \u3002 Success Response : Code : 200 Content : {\"code\": 0, \"src\": \"delete proxy success\"}","title":"\u5220\u9664\u4e00\u4e2a\u4ee3\u7406"},{"location":"api_reference/#_4","text":"URL : /all/ Method : GET Description : \u83b7\u53d6\u4ee3\u7406\u6c60\u4e2d\u7684\u6240\u6709\u4ee3\u7406\u4fe1\u606f\u3002 URL Params : type (optional): https \u6216\u7a7a\u3002 Success Response : Code : 200 Content : json [ { \"proxy\": \"123.45.67.89:8080\", \"https\": true, \"source\": \"freeProxy01\", \"region\": \"\u4e2d\u56fd \u4e0a\u6d77\", \"fail_count\": 0, \"last_time\": \"2025-08-03 09:10:00\" }, { \"proxy\": \"98.76.54.32:443\", \"https\": false, \"source\": \"freeProxy02\", \"region\": \"\u7f8e\u56fd \u52a0\u5dde\", \"fail_count\": 1, \"last_time\": \"2025-08-03 09:05:30\" } ]","title":"\u83b7\u53d6\u6240\u6709\u4ee3\u7406"},{"location":"api_reference/#_5","text":"URL : /count/ Method : GET Description : \u8fd4\u56de\u4ee3\u7406\u6c60\u4e2d\u4ee3\u7406\u7684\u603b\u6570\u3001\u6309\u7c7b\u578b\uff08HTTP/HTTPS\uff09\u548c\u6765\u6e90\u7684\u8be6\u7ec6\u7edf\u8ba1\u4fe1\u606f\u3002 Success Response : Code : 200 Content : ```json { \"count\": 120, \"http_type\": { \"http\": 80, \"https\": 40 }, \"source\": { \"freeProxy01\": 50, \"freeProxy02\": 70 } }","title":"\u83b7\u53d6\u4ee3\u7406\u6570\u91cf\u7edf\u8ba1"},{"location":"configuration/","text":"\u914d\u7f6e\u8be6\u89e3 Proxy Pool \u7684\u6240\u6709\u914d\u7f6e\u90fd\u5728\u6839\u76ee\u5f55\u7684 setting.py \u6587\u4ef6\u4e2d\u8fdb\u884c\u7ba1\u7406\u3002\u672c\u9875\u5c06\u8be6\u7ec6\u89e3\u91ca\u6bcf\u4e2a\u914d\u7f6e\u9879\u7684\u4f5c\u7528\u3001\u53ef\u9009\u503c\u548c\u9ed8\u8ba4\u503c\u3002 \u670d\u52a1\u914d\u7f6e ( Server Config ) \u8fd9\u90e8\u5206\u914d\u7f6e\u7528\u4e8e\u8bbe\u7f6e API \u670d\u52a1\u3002 HOST : \u4f5c\u7528 : \u6307\u5b9a API \u670d\u52a1\u76d1\u542c\u7684 IP \u5730\u5740\u3002 \u9ed8\u8ba4\u503c : \"0.0.0.0\" \u8bf4\u660e : 0.0.0.0 \u8868\u793a\u670d\u52a1\u5c06\u76d1\u542c\u672c\u673a\u7684\u6240\u6709\u7f51\u7edc\u63a5\u53e3\uff0c\u5141\u8bb8\u6765\u81ea\u5c40\u57df\u7f51\u6216\u516c\u7f51\u7684\u8bbf\u95ee\u3002\u5982\u679c\u53ea\u60f3\u672c\u673a\u8bbf\u95ee\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a \"127.0.0.1\" \u3002 PORT : \u4f5c\u7528 : \u6307\u5b9a API \u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\u3002 \u9ed8\u8ba4\u503c : 5010 \u8bf4\u660e : \u786e\u4fdd\u8be5\u7aef\u53e3\u672a\u88ab\u5176\u4ed6\u7a0b\u5e8f\u5360\u7528\u3002 \u6570\u636e\u5e93\u914d\u7f6e ( Database Config ) \u914d\u7f6e\u4ee3\u7406\u6c60\u6240\u4f7f\u7528\u7684\u6570\u636e\u5e93\u3002 DB_CONN : \u4f5c\u7528 : \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 (URI)\u3002 \u9ed8\u8ba4\u503c : 'redis://:pwd@127.0.0.1:6379/0' \u683c\u5f0f : Redis : redis://:password@host:port/db SSDB : ssdb://:password@host:port \u8bf4\u660e : \u8fd9\u662f\u9879\u76ee\u6700\u5173\u952e\u7684\u914d\u7f6e\u4e4b\u4e00\u3002\u8bf7\u6839\u636e\u4f60\u7684\u6570\u636e\u5e93\u4fe1\u606f\u6b63\u786e\u586b\u5199\u3002\u5982\u679c Redis \u6ca1\u6709\u5bc6\u7801\uff0c\u53ef\u4ee5\u7701\u7565\u5bc6\u7801\u90e8\u5206\uff0c\u4f8b\u5982\uff1a redis://@127.0.0.1:6379/0 \u3002 TABLE_NAME : \u4f5c\u7528 : \u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u4ee3\u7406\u6240\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u540d\u79f0\uff08\u5bf9\u4e8e Redis \u6765\u8bf4\u662f Hash \u7684\u952e\u540d\uff09\u3002 \u9ed8\u8ba4\u503c : 'use_proxy' \u4ee3\u7406\u6293\u53d6\u5668\u914d\u7f6e ( Proxy Fetcher Config ) \u914d\u7f6e\u8981\u542f\u7528\u7684\u4ee3\u7406\u6765\u6e90\u3002 PROXY_FETCHER : \u4f5c\u7528 : \u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u4e86\u6240\u6709\u8981\u542f\u7528\u7684\u4ee3\u7406\u6293\u53d6\u5668\u7684\u540d\u79f0\u3002 \u9ed8\u8ba4\u503c : python [ \"freeProxy01\", \"freeProxy02\", \"freeProxy03\", \"freeProxy04\", \"freeProxy05\", \"freeProxy06\", \"freeProxy07\", \"freeProxy08\", \"freeProxy09\", \"freeProxy10\", \"freeProxy11\" ] \u8bf4\u660e : \u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u5bf9\u5e94 fetcher/proxyFetcher.py \u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u6293\u53d6\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u6309\u9700\u589e\u5220\uff0c\u6216\u8005\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u6293\u53d6\u5668\u3002 \u4ee3\u7406\u6821\u9a8c\u5668\u914d\u7f6e ( Proxy Validator Config ) \u914d\u7f6e\u4ee3\u7406\u6821\u9a8c\u76f8\u5173\u7684\u53c2\u6570\u3002 HTTP_URL : \u4f5c\u7528 : \u6821\u9a8c\u4ee3\u7406\u662f\u5426\u652f\u6301 HTTP \u65f6\u8bf7\u6c42\u7684\u76ee\u6807\u7f51\u7ad9\u3002 \u9ed8\u8ba4\u503c : \"http://httpbin.org\" \u8bf4\u660e : \u5efa\u8bae\u9009\u62e9\u4e00\u4e2a\u7a33\u5b9a\u4e14\u80fd\u5feb\u901f\u54cd\u5e94\u7684\u7f51\u7ad9\u3002 HTTPS_URL : \u4f5c\u7528 : \u6821\u9a8c\u4ee3\u7406\u662f\u5426\u652f\u6301 HTTPS \u65f6\u8bf7\u6c42\u7684\u76ee\u6807\u7f51\u7ad9\u3002 \u9ed8\u8ba4\u503c : \"https://www.qq.com\" VERIFY_TIMEOUT : \u4f5c\u7528 : \u6821\u9a8c\u4ee3\u7406\u65f6\u7684\u7f51\u7edc\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff08\u5355\u4f4d\uff1a\u79d2\uff09\u3002 \u9ed8\u8ba4\u503c : 10 MAX_FAIL_COUNT : \u4f5c\u7528 : \u5141\u8bb8\u4ee3\u7406\u8fde\u7eed\u6821\u9a8c\u5931\u8d25\u7684\u6700\u5927\u6b21\u6570\u3002\u5f53\u4e00\u4e2a\u4ee3\u7406\u7684\u7d2f\u8ba1\u5931\u8d25\u6b21\u6570\u8d85\u8fc7\u8be5\u503c\u65f6\uff0c\u5b83\u5c06\u88ab\u4ece\u4ee3\u7406\u6c60\u4e2d\u79fb\u9664\u3002 \u9ed8\u8ba4\u503c : 0 (\u5728 2.4.0 \u7248\u672c\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u6b21\u5931\u8d25\u5c31\u53ef\u80fd\u88ab\u6807\u8bb0\u4e3a\u5f85\u79fb\u9664, \u4f46\u5177\u4f53\u884c\u4e3a\u53d6\u51b3\u4e8e\u6821\u9a8c\u903b\u8f91) POOL_SIZE_MIN : \u4f5c\u7528 : \u4ee3\u7406\u6c60\u7684\u6700\u5c0f\u5bb9\u91cf\u9608\u503c\u3002\u5f53\u53ef\u7528\u4ee3\u7406\u6570\u91cf\u4f4e\u4e8e\u6b64\u503c\u65f6\uff0c\u8c03\u5ea6\u5668\u4f1a\u7acb\u5373\u89e6\u53d1\u65b0\u4e00\u8f6e\u7684\u4ee3\u7406\u6293\u53d6\u4efb\u52a1\u3002 \u9ed8\u8ba4\u503c : 20 \u4ee3\u7406\u5c5e\u6027\u914d\u7f6e ( Proxy Attributes Config ) PROXY_REGION : \u4f5c\u7528 : \u662f\u5426\u542f\u7528\u4ee3\u7406\u7684\u5730\u7406\u4f4d\u7f6e\u5f52\u5c5e\u5730\u5206\u6790\u3002 \u9ed8\u8ba4\u503c : True \u8bf4\u660e : \u5f00\u542f\u540e\uff0c\u7cfb\u7edf\u4f1a\u5c1d\u8bd5\u8bc6\u522b\u6bcf\u4e2a\u4ee3\u7406\u7684\u5730\u7406\u4f4d\u7f6e\uff08\u56fd\u5bb6/\u57ce\u5e02\uff09\uff0c\u4f46\u8fd9\u4f1a\u6d88\u8017\u989d\u5916\u7684\u7cfb\u7edf\u8d44\u6e90\u3002\u5982\u679c\u4e0d\u9700\u8981\u6b64\u529f\u80fd\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a False \u3002 \u8c03\u5ea6\u5668\u914d\u7f6e ( Scheduler Config ) TIMEZONE : \u4f5c\u7528 : \u5f3a\u5236\u4e3a\u8c03\u5ea6\u5668\u8bbe\u7f6e\u65f6\u533a\u3002 \u9ed8\u8ba4\u503c : \"Asia/Shanghai\" \u8bf4\u660e : \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8c03\u5ea6\u5668\u4f1a\u81ea\u52a8\u68c0\u6d4b\u7cfb\u7edf\u65f6\u533a\u3002\u4f46\u662f\uff0c\u5982\u679c\u5728\u865a\u62df\u673a\u6216\u5bb9\u5668\u73af\u5883\u4e2d\u9047\u5230\u65f6\u533a\u9519\u8bef (\u4f8b\u5982 ValueError: Timezone offset does not match system offset )\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u53d6\u6d88\u6ce8\u91ca\u5e76\u8bbe\u7f6e\u6b64\u9879\u6765\u89e3\u51b3\u3002","title":"\u914d\u7f6e\u8be6\u89e3"},{"location":"configuration/#_1","text":"Proxy Pool \u7684\u6240\u6709\u914d\u7f6e\u90fd\u5728\u6839\u76ee\u5f55\u7684 setting.py \u6587\u4ef6\u4e2d\u8fdb\u884c\u7ba1\u7406\u3002\u672c\u9875\u5c06\u8be6\u7ec6\u89e3\u91ca\u6bcf\u4e2a\u914d\u7f6e\u9879\u7684\u4f5c\u7528\u3001\u53ef\u9009\u503c\u548c\u9ed8\u8ba4\u503c\u3002","title":"\u914d\u7f6e\u8be6\u89e3"},{"location":"configuration/#server-config","text":"\u8fd9\u90e8\u5206\u914d\u7f6e\u7528\u4e8e\u8bbe\u7f6e API \u670d\u52a1\u3002 HOST : \u4f5c\u7528 : \u6307\u5b9a API \u670d\u52a1\u76d1\u542c\u7684 IP \u5730\u5740\u3002 \u9ed8\u8ba4\u503c : \"0.0.0.0\" \u8bf4\u660e : 0.0.0.0 \u8868\u793a\u670d\u52a1\u5c06\u76d1\u542c\u672c\u673a\u7684\u6240\u6709\u7f51\u7edc\u63a5\u53e3\uff0c\u5141\u8bb8\u6765\u81ea\u5c40\u57df\u7f51\u6216\u516c\u7f51\u7684\u8bbf\u95ee\u3002\u5982\u679c\u53ea\u60f3\u672c\u673a\u8bbf\u95ee\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a \"127.0.0.1\" \u3002 PORT : \u4f5c\u7528 : \u6307\u5b9a API \u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\u3002 \u9ed8\u8ba4\u503c : 5010 \u8bf4\u660e : \u786e\u4fdd\u8be5\u7aef\u53e3\u672a\u88ab\u5176\u4ed6\u7a0b\u5e8f\u5360\u7528\u3002","title":"\u670d\u52a1\u914d\u7f6e (Server Config)"},{"location":"configuration/#database-config","text":"\u914d\u7f6e\u4ee3\u7406\u6c60\u6240\u4f7f\u7528\u7684\u6570\u636e\u5e93\u3002 DB_CONN : \u4f5c\u7528 : \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 (URI)\u3002 \u9ed8\u8ba4\u503c : 'redis://:pwd@127.0.0.1:6379/0' \u683c\u5f0f : Redis : redis://:password@host:port/db SSDB : ssdb://:password@host:port \u8bf4\u660e : \u8fd9\u662f\u9879\u76ee\u6700\u5173\u952e\u7684\u914d\u7f6e\u4e4b\u4e00\u3002\u8bf7\u6839\u636e\u4f60\u7684\u6570\u636e\u5e93\u4fe1\u606f\u6b63\u786e\u586b\u5199\u3002\u5982\u679c Redis \u6ca1\u6709\u5bc6\u7801\uff0c\u53ef\u4ee5\u7701\u7565\u5bc6\u7801\u90e8\u5206\uff0c\u4f8b\u5982\uff1a redis://@127.0.0.1:6379/0 \u3002 TABLE_NAME : \u4f5c\u7528 : \u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u4ee3\u7406\u6240\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u540d\u79f0\uff08\u5bf9\u4e8e Redis \u6765\u8bf4\u662f Hash \u7684\u952e\u540d\uff09\u3002 \u9ed8\u8ba4\u503c : 'use_proxy'","title":"\u6570\u636e\u5e93\u914d\u7f6e (Database Config)"},{"location":"configuration/#proxy-fetcher-config","text":"\u914d\u7f6e\u8981\u542f\u7528\u7684\u4ee3\u7406\u6765\u6e90\u3002 PROXY_FETCHER : \u4f5c\u7528 : \u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u4e86\u6240\u6709\u8981\u542f\u7528\u7684\u4ee3\u7406\u6293\u53d6\u5668\u7684\u540d\u79f0\u3002 \u9ed8\u8ba4\u503c : python [ \"freeProxy01\", \"freeProxy02\", \"freeProxy03\", \"freeProxy04\", \"freeProxy05\", \"freeProxy06\", \"freeProxy07\", \"freeProxy08\", \"freeProxy09\", \"freeProxy10\", \"freeProxy11\" ] \u8bf4\u660e : \u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u5bf9\u5e94 fetcher/proxyFetcher.py \u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u6293\u53d6\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u6309\u9700\u589e\u5220\uff0c\u6216\u8005\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u6293\u53d6\u5668\u3002","title":"\u4ee3\u7406\u6293\u53d6\u5668\u914d\u7f6e (Proxy Fetcher Config)"},{"location":"configuration/#proxy-validator-config","text":"\u914d\u7f6e\u4ee3\u7406\u6821\u9a8c\u76f8\u5173\u7684\u53c2\u6570\u3002 HTTP_URL : \u4f5c\u7528 : \u6821\u9a8c\u4ee3\u7406\u662f\u5426\u652f\u6301 HTTP \u65f6\u8bf7\u6c42\u7684\u76ee\u6807\u7f51\u7ad9\u3002 \u9ed8\u8ba4\u503c : \"http://httpbin.org\" \u8bf4\u660e : \u5efa\u8bae\u9009\u62e9\u4e00\u4e2a\u7a33\u5b9a\u4e14\u80fd\u5feb\u901f\u54cd\u5e94\u7684\u7f51\u7ad9\u3002 HTTPS_URL : \u4f5c\u7528 : \u6821\u9a8c\u4ee3\u7406\u662f\u5426\u652f\u6301 HTTPS \u65f6\u8bf7\u6c42\u7684\u76ee\u6807\u7f51\u7ad9\u3002 \u9ed8\u8ba4\u503c : \"https://www.qq.com\" VERIFY_TIMEOUT : \u4f5c\u7528 : \u6821\u9a8c\u4ee3\u7406\u65f6\u7684\u7f51\u7edc\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff08\u5355\u4f4d\uff1a\u79d2\uff09\u3002 \u9ed8\u8ba4\u503c : 10 MAX_FAIL_COUNT : \u4f5c\u7528 : \u5141\u8bb8\u4ee3\u7406\u8fde\u7eed\u6821\u9a8c\u5931\u8d25\u7684\u6700\u5927\u6b21\u6570\u3002\u5f53\u4e00\u4e2a\u4ee3\u7406\u7684\u7d2f\u8ba1\u5931\u8d25\u6b21\u6570\u8d85\u8fc7\u8be5\u503c\u65f6\uff0c\u5b83\u5c06\u88ab\u4ece\u4ee3\u7406\u6c60\u4e2d\u79fb\u9664\u3002 \u9ed8\u8ba4\u503c : 0 (\u5728 2.4.0 \u7248\u672c\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u6b21\u5931\u8d25\u5c31\u53ef\u80fd\u88ab\u6807\u8bb0\u4e3a\u5f85\u79fb\u9664, \u4f46\u5177\u4f53\u884c\u4e3a\u53d6\u51b3\u4e8e\u6821\u9a8c\u903b\u8f91) POOL_SIZE_MIN : \u4f5c\u7528 : \u4ee3\u7406\u6c60\u7684\u6700\u5c0f\u5bb9\u91cf\u9608\u503c\u3002\u5f53\u53ef\u7528\u4ee3\u7406\u6570\u91cf\u4f4e\u4e8e\u6b64\u503c\u65f6\uff0c\u8c03\u5ea6\u5668\u4f1a\u7acb\u5373\u89e6\u53d1\u65b0\u4e00\u8f6e\u7684\u4ee3\u7406\u6293\u53d6\u4efb\u52a1\u3002 \u9ed8\u8ba4\u503c : 20","title":"\u4ee3\u7406\u6821\u9a8c\u5668\u914d\u7f6e (Proxy Validator Config)"},{"location":"configuration/#proxy-attributes-config","text":"PROXY_REGION : \u4f5c\u7528 : \u662f\u5426\u542f\u7528\u4ee3\u7406\u7684\u5730\u7406\u4f4d\u7f6e\u5f52\u5c5e\u5730\u5206\u6790\u3002 \u9ed8\u8ba4\u503c : True \u8bf4\u660e : \u5f00\u542f\u540e\uff0c\u7cfb\u7edf\u4f1a\u5c1d\u8bd5\u8bc6\u522b\u6bcf\u4e2a\u4ee3\u7406\u7684\u5730\u7406\u4f4d\u7f6e\uff08\u56fd\u5bb6/\u57ce\u5e02\uff09\uff0c\u4f46\u8fd9\u4f1a\u6d88\u8017\u989d\u5916\u7684\u7cfb\u7edf\u8d44\u6e90\u3002\u5982\u679c\u4e0d\u9700\u8981\u6b64\u529f\u80fd\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a False \u3002","title":"\u4ee3\u7406\u5c5e\u6027\u914d\u7f6e (Proxy Attributes Config)"},{"location":"configuration/#scheduler-config","text":"TIMEZONE : \u4f5c\u7528 : \u5f3a\u5236\u4e3a\u8c03\u5ea6\u5668\u8bbe\u7f6e\u65f6\u533a\u3002 \u9ed8\u8ba4\u503c : \"Asia/Shanghai\" \u8bf4\u660e : \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8c03\u5ea6\u5668\u4f1a\u81ea\u52a8\u68c0\u6d4b\u7cfb\u7edf\u65f6\u533a\u3002\u4f46\u662f\uff0c\u5982\u679c\u5728\u865a\u62df\u673a\u6216\u5bb9\u5668\u73af\u5883\u4e2d\u9047\u5230\u65f6\u533a\u9519\u8bef (\u4f8b\u5982 ValueError: Timezone offset does not match system offset )\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u53d6\u6d88\u6ce8\u91ca\u5e76\u8bbe\u7f6e\u6b64\u9879\u6765\u89e3\u51b3\u3002","title":"\u8c03\u5ea6\u5668\u914d\u7f6e (Scheduler Config)"},{"location":"developer_guide/","text":"\u5f00\u53d1\u8005\u6307\u5357 Proxy Pool \u8bbe\u8ba1\u4e3a\u53ef\u6269\u5c55\u7684\u67b6\u6784\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u8f7b\u677e\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7406\u6e90\u548c\u6821\u9a8c\u903b\u8f91\u3002\u672c\u6307\u5357\u5c06\u4ecb\u7ecd\u9879\u76ee\u7684\u6838\u5fc3\u6a21\u5757\u4ee5\u53ca\u5982\u4f55\u8fdb\u884c\u6269\u5c55\u3002 \u9879\u76ee\u7ed3\u6784\u7b80\u4ecb fetcher/proxyFetcher.py : \u5b9a\u4e49\u4e86\u6240\u6709\u4ee3\u7406\u6293\u53d6\u5668\u3002\u6bcf\u4e2a\u6293\u53d6\u5668\u90fd\u662f ProxyFetcher \u7c7b\u7684\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u3002 helper/validator.py : \u5b9a\u4e49\u4e86\u4ee3\u7406\u6821\u9a8c\u903b\u8f91\u3002\u901a\u8fc7\u88c5\u9970\u5668\u5c06\u51fd\u6570\u6ce8\u518c\u4e3a\u4e0d\u540c\u9636\u6bb5\u7684\u6821\u9a8c\u5668\u3002 handler/proxyHandler.py : \u5c01\u88c5\u4e86\u5bf9\u6570\u636e\u5e93\u4e2d\u4ee3\u7406\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7b49\u6838\u5fc3\u64cd\u4f5c\u3002 db/ : \u6570\u636e\u5e93\u5ba2\u6237\u7aef\u6a21\u5757\uff0c\u5b9e\u73b0\u4e86\u5bf9 Redis \u548c SSDB \u7684\u652f\u6301\u3002 api/proxyApi.py : \u63d0\u4f9b\u4e86\u5bf9\u5916\u670d\u52a1\u7684 HTTP API \u63a5\u53e3\u3002 proxyPool.py : \u9879\u76ee\u7684\u547d\u4ee4\u884c\u542f\u52a8\u5165\u53e3\u548c\u8c03\u5ea6\u5668\u4e3b\u903b\u8f91\u3002 \u5982\u4f55\u6269\u5c55\u4ee3\u7406\u6e90 \u9879\u76ee\u9ed8\u8ba4\u5305\u542b\u4e86\u4e00\u4e9b\u514d\u8d39\u7684\u4ee3\u7406\u6e90\uff0c\u4f46\u5b83\u4eec\u7684\u8d28\u91cf\u53ef\u80fd\u4e0d\u7a33\u5b9a\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7406\u83b7\u53d6\u6e20\u9053\uff08\u4f8b\u5982\uff0c\u4ed8\u8d39\u4ee3\u7406 API\u3001\u81ea\u5df1\u642d\u5efa\u7684\u4ee3\u7406\u670d\u52a1\u5668\u7b49\uff09\u3002 1. \u6dfb\u52a0\u6293\u53d6\u65b9\u6cd5 \u6253\u5f00 fetcher/proxyFetcher.py \u6587\u4ef6\uff0c\u5728 ProxyFetcher \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u9759\u6001\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5fc5\u987b\uff1a - \u662f\u4e00\u4e2a\u751f\u6210\u5668 (\u4f7f\u7528 yield )\u3002 - \u8fd4\u56de ip:port \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a # In fetcher/proxyFetcher.py class ProxyFetcher(object): # ... existing methods @staticmethod def myCustomProxySource(): \"\"\" \u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u4ee3\u7406\u6e90\u3002 \u53ef\u4ee5\u4ece\u7f51\u7ad9\u3001API \u6216\u6570\u636e\u5e93\u83b7\u53d6\u4ee3\u7406\u3002 \"\"\" # \u5047\u8bbe\u4f60\u4ece\u67d0\u4e2a API \u83b7\u53d6\u4e86\u4ee3\u7406\u5217\u8868 proxies_from_api = [\"10.0.0.1:8888\", \"10.0.0.2:8888\"] for proxy in proxies_from_api: # \u786e\u4fdd\u8fd4\u56de\u683c\u5f0f\u6b63\u786e yield proxy 2. \u542f\u7528\u65b0\u7684\u6293\u53d6\u5668 \u6253\u5f00\u6839\u76ee\u5f55\u4e0b\u7684 setting.py \u6587\u4ef6\uff0c\u5c06\u4f60\u521a\u521a\u521b\u5efa\u7684\u65b9\u6cd5\u540d\u6dfb\u52a0\u5230 PROXY_FETCHER \u5217\u8868\u4e2d\u3002 # In setting.py PROXY_FETCHER = [ \"freeProxy01\", # ... other fetchers \"myCustomProxySource\" # \u6dfb\u52a0\u4f60\u7684\u81ea\u5b9a\u4e49\u65b9\u6cd5\u540d ] \u5b8c\u6210\u4ee5\u4e0a\u4e24\u6b65\u540e\uff0c\u91cd\u542f\u8c03\u5ea6\u5668\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u8c03\u7528\u4f60\u7684\u65b0\u65b9\u6cd5\u6765\u83b7\u53d6\u4ee3\u7406\u4e86\u3002 \u5982\u4f55\u6269\u5c55\u4ee3\u7406\u6821\u9a8c\u903b\u8f91 \u4ee3\u7406\u6821\u9a8c\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff0c\u901a\u8fc7\u88c5\u9970\u5668\u6765\u533a\u5206\uff1a @ProxyValidator.preValidator : \u9884\u6821\u9a8c \u3002\u5728\u4ee3\u7406\u5165\u5e93\u524d\u8fdb\u884c\uff0c\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u4ee3\u7406\u683c\u5f0f\u662f\u5426\u6b63\u786e\u3002 @ProxyValidator.httpValidator : HTTP \u53ef\u7528\u6027\u6821\u9a8c \u3002\u68c0\u67e5\u4ee3\u7406\u662f\u5426\u80fd\u6b63\u5e38\u8bbf\u95ee HTTP \u7f51\u7ad9\u3002\u53ea\u6709\u901a\u8fc7\u6b64\u9636\u6bb5\u6240\u6709\u6821\u9a8c\u7684\u4ee3\u7406\u624d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u53ef\u7528\u4ee3\u7406\u3002 @ProxyValidator.httpsValidator : HTTPS \u53ef\u7528\u6027\u6821\u9a8c \u3002\u68c0\u67e5\u901a\u8fc7\u4e86 HTTP \u6821\u9a8c\u7684\u4ee3\u7406\u662f\u5426\u4e5f\u652f\u6301 HTTPS\u3002 \u5f53\u4e00\u4e2a\u9636\u6bb5\u6709\u591a\u4e2a\u6821\u9a8c\u51fd\u6570\u65f6\uff0c\u5b83\u4eec\u4f1a\u6309\u5b9a\u4e49\u987a\u5e8f\u6267\u884c\uff0c \u5fc5\u987b\u6240\u6709\u51fd\u6570\u90fd\u8fd4\u56de True \uff0c\u8be5\u9636\u6bb5\u7684\u6821\u9a8c\u624d\u7b97\u901a\u8fc7\u3002 \u793a\u4f8b\uff1a\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 HTTP \u6821\u9a8c\u5668 \u5047\u8bbe\u4f60\u9700\u8981\u786e\u4fdd\u4ee3\u7406\u4e0d\u4ec5\u80fd\u8bbf\u95ee\u76ee\u6807\u7f51\u7ad9\uff0c\u8fd8\u80fd\u83b7\u53d6\u5230\u7279\u5b9a\u7684\u5173\u952e\u8bcd\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5982\u4e0b\u6821\u9a8c\u51fd\u6570\u3002 \u6253\u5f00 helper/validator.py \u6587\u4ef6\u3002 \u6dfb\u52a0\u4f60\u7684\u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u76f8\u5e94\u7684\u88c5\u9970\u5668\u3002 # In helper/validator.py fromrequests.compatimport chardet # ... @ProxyValidator.addHttpValidator def customKeywordValidator(proxy): \"\"\" \u81ea\u5b9a\u4e49\u6821\u9a8c\u5668\uff1a\u68c0\u67e5\u4ee3\u7406\u8bbf\u95ee\u767e\u5ea6\u9996\u9875\u662f\u5426\u80fd\u8fd4\u56de\u7279\u5b9a\u5173\u952e\u8bcd\u3002 \"\"\" proxies = {\"http\": f\"http://{proxy.proxy}\"} try: # \u4f7f\u7528 verify=False \u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u5185\u5bb9\uff0c\u4e0d\u6821\u9a8c\u8bc1\u4e66 r = requests.get(\"http://www.baidu.com\", headers=HEADER, proxies=proxies, timeout=5, verify=False) # \u68c0\u6d4b\u7f16\u7801\u5e76\u89e3\u7801 encoding = chardet.detect(r.content)['encoding'] content = r.content.decode(encoding or 'utf-8') if r.status_code == 200 and \"\u767e\u5ea6\u4e00\u4e0b\" in content: return True return False except Exception: return False \u6dfb\u52a0\u540e\uff0c\u8fd9\u4e2a customKeywordValidator \u4f1a\u81ea\u52a8\u88ab\u52a0\u5165\u5230 HTTP \u6821\u9a8c\u6d41\u7a0b\u4e2d\u3002\u4f60\u65e0\u9700\u4fee\u6539\u5176\u4ed6\u4efb\u4f55\u914d\u7f6e\u3002\u540c\u7406\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 @ProxyValidator.addHttpsValidator \u6765\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684 HTTPS \u6821\u9a8c\u903b\u8f91\u3002","title":"\u5f00\u53d1\u8005\u6307\u5357"},{"location":"developer_guide/#_1","text":"Proxy Pool \u8bbe\u8ba1\u4e3a\u53ef\u6269\u5c55\u7684\u67b6\u6784\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u8f7b\u677e\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7406\u6e90\u548c\u6821\u9a8c\u903b\u8f91\u3002\u672c\u6307\u5357\u5c06\u4ecb\u7ecd\u9879\u76ee\u7684\u6838\u5fc3\u6a21\u5757\u4ee5\u53ca\u5982\u4f55\u8fdb\u884c\u6269\u5c55\u3002","title":"\u5f00\u53d1\u8005\u6307\u5357"},{"location":"developer_guide/#_2","text":"fetcher/proxyFetcher.py : \u5b9a\u4e49\u4e86\u6240\u6709\u4ee3\u7406\u6293\u53d6\u5668\u3002\u6bcf\u4e2a\u6293\u53d6\u5668\u90fd\u662f ProxyFetcher \u7c7b\u7684\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u3002 helper/validator.py : \u5b9a\u4e49\u4e86\u4ee3\u7406\u6821\u9a8c\u903b\u8f91\u3002\u901a\u8fc7\u88c5\u9970\u5668\u5c06\u51fd\u6570\u6ce8\u518c\u4e3a\u4e0d\u540c\u9636\u6bb5\u7684\u6821\u9a8c\u5668\u3002 handler/proxyHandler.py : \u5c01\u88c5\u4e86\u5bf9\u6570\u636e\u5e93\u4e2d\u4ee3\u7406\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7b49\u6838\u5fc3\u64cd\u4f5c\u3002 db/ : \u6570\u636e\u5e93\u5ba2\u6237\u7aef\u6a21\u5757\uff0c\u5b9e\u73b0\u4e86\u5bf9 Redis \u548c SSDB \u7684\u652f\u6301\u3002 api/proxyApi.py : \u63d0\u4f9b\u4e86\u5bf9\u5916\u670d\u52a1\u7684 HTTP API \u63a5\u53e3\u3002 proxyPool.py : \u9879\u76ee\u7684\u547d\u4ee4\u884c\u542f\u52a8\u5165\u53e3\u548c\u8c03\u5ea6\u5668\u4e3b\u903b\u8f91\u3002","title":"\u9879\u76ee\u7ed3\u6784\u7b80\u4ecb"},{"location":"developer_guide/#_3","text":"\u9879\u76ee\u9ed8\u8ba4\u5305\u542b\u4e86\u4e00\u4e9b\u514d\u8d39\u7684\u4ee3\u7406\u6e90\uff0c\u4f46\u5b83\u4eec\u7684\u8d28\u91cf\u53ef\u80fd\u4e0d\u7a33\u5b9a\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7406\u83b7\u53d6\u6e20\u9053\uff08\u4f8b\u5982\uff0c\u4ed8\u8d39\u4ee3\u7406 API\u3001\u81ea\u5df1\u642d\u5efa\u7684\u4ee3\u7406\u670d\u52a1\u5668\u7b49\uff09\u3002 1. \u6dfb\u52a0\u6293\u53d6\u65b9\u6cd5 \u6253\u5f00 fetcher/proxyFetcher.py \u6587\u4ef6\uff0c\u5728 ProxyFetcher \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u9759\u6001\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5fc5\u987b\uff1a - \u662f\u4e00\u4e2a\u751f\u6210\u5668 (\u4f7f\u7528 yield )\u3002 - \u8fd4\u56de ip:port \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a # In fetcher/proxyFetcher.py class ProxyFetcher(object): # ... existing methods @staticmethod def myCustomProxySource(): \"\"\" \u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u4ee3\u7406\u6e90\u3002 \u53ef\u4ee5\u4ece\u7f51\u7ad9\u3001API \u6216\u6570\u636e\u5e93\u83b7\u53d6\u4ee3\u7406\u3002 \"\"\" # \u5047\u8bbe\u4f60\u4ece\u67d0\u4e2a API \u83b7\u53d6\u4e86\u4ee3\u7406\u5217\u8868 proxies_from_api = [\"10.0.0.1:8888\", \"10.0.0.2:8888\"] for proxy in proxies_from_api: # \u786e\u4fdd\u8fd4\u56de\u683c\u5f0f\u6b63\u786e yield proxy 2. \u542f\u7528\u65b0\u7684\u6293\u53d6\u5668 \u6253\u5f00\u6839\u76ee\u5f55\u4e0b\u7684 setting.py \u6587\u4ef6\uff0c\u5c06\u4f60\u521a\u521a\u521b\u5efa\u7684\u65b9\u6cd5\u540d\u6dfb\u52a0\u5230 PROXY_FETCHER \u5217\u8868\u4e2d\u3002 # In setting.py PROXY_FETCHER = [ \"freeProxy01\", # ... other fetchers \"myCustomProxySource\" # \u6dfb\u52a0\u4f60\u7684\u81ea\u5b9a\u4e49\u65b9\u6cd5\u540d ] \u5b8c\u6210\u4ee5\u4e0a\u4e24\u6b65\u540e\uff0c\u91cd\u542f\u8c03\u5ea6\u5668\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u8c03\u7528\u4f60\u7684\u65b0\u65b9\u6cd5\u6765\u83b7\u53d6\u4ee3\u7406\u4e86\u3002","title":"\u5982\u4f55\u6269\u5c55\u4ee3\u7406\u6e90"},{"location":"developer_guide/#_4","text":"\u4ee3\u7406\u6821\u9a8c\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff0c\u901a\u8fc7\u88c5\u9970\u5668\u6765\u533a\u5206\uff1a @ProxyValidator.preValidator : \u9884\u6821\u9a8c \u3002\u5728\u4ee3\u7406\u5165\u5e93\u524d\u8fdb\u884c\uff0c\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u4ee3\u7406\u683c\u5f0f\u662f\u5426\u6b63\u786e\u3002 @ProxyValidator.httpValidator : HTTP \u53ef\u7528\u6027\u6821\u9a8c \u3002\u68c0\u67e5\u4ee3\u7406\u662f\u5426\u80fd\u6b63\u5e38\u8bbf\u95ee HTTP \u7f51\u7ad9\u3002\u53ea\u6709\u901a\u8fc7\u6b64\u9636\u6bb5\u6240\u6709\u6821\u9a8c\u7684\u4ee3\u7406\u624d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u53ef\u7528\u4ee3\u7406\u3002 @ProxyValidator.httpsValidator : HTTPS \u53ef\u7528\u6027\u6821\u9a8c \u3002\u68c0\u67e5\u901a\u8fc7\u4e86 HTTP \u6821\u9a8c\u7684\u4ee3\u7406\u662f\u5426\u4e5f\u652f\u6301 HTTPS\u3002 \u5f53\u4e00\u4e2a\u9636\u6bb5\u6709\u591a\u4e2a\u6821\u9a8c\u51fd\u6570\u65f6\uff0c\u5b83\u4eec\u4f1a\u6309\u5b9a\u4e49\u987a\u5e8f\u6267\u884c\uff0c \u5fc5\u987b\u6240\u6709\u51fd\u6570\u90fd\u8fd4\u56de True \uff0c\u8be5\u9636\u6bb5\u7684\u6821\u9a8c\u624d\u7b97\u901a\u8fc7\u3002 \u793a\u4f8b\uff1a\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 HTTP \u6821\u9a8c\u5668 \u5047\u8bbe\u4f60\u9700\u8981\u786e\u4fdd\u4ee3\u7406\u4e0d\u4ec5\u80fd\u8bbf\u95ee\u76ee\u6807\u7f51\u7ad9\uff0c\u8fd8\u80fd\u83b7\u53d6\u5230\u7279\u5b9a\u7684\u5173\u952e\u8bcd\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5982\u4e0b\u6821\u9a8c\u51fd\u6570\u3002 \u6253\u5f00 helper/validator.py \u6587\u4ef6\u3002 \u6dfb\u52a0\u4f60\u7684\u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u76f8\u5e94\u7684\u88c5\u9970\u5668\u3002 # In helper/validator.py fromrequests.compatimport chardet # ... @ProxyValidator.addHttpValidator def customKeywordValidator(proxy): \"\"\" \u81ea\u5b9a\u4e49\u6821\u9a8c\u5668\uff1a\u68c0\u67e5\u4ee3\u7406\u8bbf\u95ee\u767e\u5ea6\u9996\u9875\u662f\u5426\u80fd\u8fd4\u56de\u7279\u5b9a\u5173\u952e\u8bcd\u3002 \"\"\" proxies = {\"http\": f\"http://{proxy.proxy}\"} try: # \u4f7f\u7528 verify=False \u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u5185\u5bb9\uff0c\u4e0d\u6821\u9a8c\u8bc1\u4e66 r = requests.get(\"http://www.baidu.com\", headers=HEADER, proxies=proxies, timeout=5, verify=False) # \u68c0\u6d4b\u7f16\u7801\u5e76\u89e3\u7801 encoding = chardet.detect(r.content)['encoding'] content = r.content.decode(encoding or 'utf-8') if r.status_code == 200 and \"\u767e\u5ea6\u4e00\u4e0b\" in content: return True return False except Exception: return False \u6dfb\u52a0\u540e\uff0c\u8fd9\u4e2a customKeywordValidator \u4f1a\u81ea\u52a8\u88ab\u52a0\u5165\u5230 HTTP \u6821\u9a8c\u6d41\u7a0b\u4e2d\u3002\u4f60\u65e0\u9700\u4fee\u6539\u5176\u4ed6\u4efb\u4f55\u914d\u7f6e\u3002\u540c\u7406\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 @ProxyValidator.addHttpsValidator \u6765\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684 HTTPS \u6821\u9a8c\u903b\u8f91\u3002","title":"\u5982\u4f55\u6269\u5c55\u4ee3\u7406\u6821\u9a8c\u903b\u8f91"},{"location":"getting_started/","text":"\u5feb\u901f\u4e0a\u624b \u672c\u6307\u5357\u5c06\u5f15\u5bfc\u4f60\u5b8c\u6210 Proxy Pool \u9879\u76ee\u7684\u4e0b\u8f7d\u3001\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u542f\u52a8\u3002 1. \u4e0b\u8f7d\u4ee3\u7801 \u9996\u5148\uff0c\u4f60\u9700\u8981\u5c06\u9879\u76ee\u4ee3\u7801\u514b\u9686\u5230\u672c\u5730\u3002\u6253\u5f00\u4f60\u7684\u7ec8\u7aef\uff0c\u4f7f\u7528 git \u547d\u4ee4\uff1a git clone https://github.com/jhao104/proxy_pool.git \u5982\u679c\u4f60\u4e0d\u9700\u8981\u5b8c\u6574\u7684\u63d0\u4ea4\u5386\u53f2\uff0c\u4e5f\u53ef\u4ee5\u4ece GitHub Releases \u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c\u538b\u7f29\u5305\u3002 2. \u5b89\u88c5\u4f9d\u8d56 \u8fdb\u5165\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u4f7f\u7528 pip \u5b89\u88c5\u6240\u9700\u7684\u4f9d\u8d56\u5e93\u3002 cd proxy_pool pip install -r requirements.txt \u786e\u4fdd\u4f60\u7684 Python \u73af\u5883\u662f 3.6 \u6216\u66f4\u9ad8\u7248\u672c\u3002 3. \u4fee\u6539\u914d\u7f6e \u9879\u76ee\u7684\u6838\u5fc3\u914d\u7f6e\u4f4d\u4e8e\u6839\u76ee\u5f55\u4e0b\u7684 setting.py \u6587\u4ef6\u4e2d\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539\u4ee5\u4e0b\u5173\u952e\u914d\u7f6e\uff1a # API \u670d\u52a1\u914d\u7f6e HOST = \"0.0.0.0\" # \u76d1\u542c\u7684 IP \u5730\u5740\uff0c0.0.0.0 \u8868\u793a\u5141\u8bb8\u6240\u6709 IP \u8bbf\u95ee PORT = 5010 # \u76d1\u542c\u7684\u7aef\u53e3\u53f7 # \u6570\u636e\u5e93\u914d\u7f6e (\u652f\u6301 Redis \u548c SSDB) # \u793a\u4f8b: # - Redis: redis://:password@ip:port/db # - Ssdb: ssdb://:password@ip:port DB_CONN = 'redis://@127.0.0.1:6379/0' # \u542f\u7528\u7684\u4ee3\u7406\u6293\u53d6\u5668 # \u6240\u6709\u53ef\u7528\u7684\u6293\u53d6\u5668\u90fd\u5b9a\u4e49\u5728 fetcher/proxyFetcher.py \u6587\u4ef6\u4e2d PROXY_FETCHER = [ \"freeProxy01\", \"freeProxy02\", # ... \u4f60\u53ef\u4ee5\u5728\u6b64\u6dfb\u52a0\u6216\u79fb\u9664\u6293\u53d6\u5668 ] \u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003 \u914d\u7f6e\u8be6\u89e3 \u9875\u9762\u3002 4. \u542f\u52a8\u9879\u76ee \u9879\u76ee\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a \u8c03\u5ea6\u5668 ( schedule ) : \u8d1f\u8d23\u4ece\u5404\u5927\u4ee3\u7406\u6e90\u7f51\u7ad9\u6293\u53d6\u3001\u6821\u9a8c\u548c\u5b58\u50a8\u4ee3\u7406\u3002 Web \u670d\u52a1 ( server ) : \u63d0\u4f9b HTTP API \u63a5\u53e3\uff0c\u4f9b\u5916\u90e8\u7a0b\u5e8f\u83b7\u53d6\u4ee3\u7406\u3002 \u4f60\u9700\u8981\u5206\u522b\u542f\u52a8\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u3002 \u542f\u52a8\u8c03\u5ea6\u5668\uff1a \u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8\u4ee3\u7406\u7684\u6293\u53d6\u548c\u6821\u9a8c\u4efb\u52a1\u3002 python proxyPool.py schedule \u542f\u52a8 API \u670d\u52a1\uff1a \u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8 Web API \u670d\u52a1\u3002 python proxyPool.py server \u670d\u52a1\u542f\u52a8\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee http://127.0.0.1:5010 \u6765\u67e5\u770b API \u7684\u57fa\u672c\u4fe1\u606f\u548c\u4f7f\u7528\u8bf4\u660e\u3002","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"getting_started/#_1","text":"\u672c\u6307\u5357\u5c06\u5f15\u5bfc\u4f60\u5b8c\u6210 Proxy Pool \u9879\u76ee\u7684\u4e0b\u8f7d\u3001\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u542f\u52a8\u3002","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"getting_started/#1","text":"\u9996\u5148\uff0c\u4f60\u9700\u8981\u5c06\u9879\u76ee\u4ee3\u7801\u514b\u9686\u5230\u672c\u5730\u3002\u6253\u5f00\u4f60\u7684\u7ec8\u7aef\uff0c\u4f7f\u7528 git \u547d\u4ee4\uff1a git clone https://github.com/jhao104/proxy_pool.git \u5982\u679c\u4f60\u4e0d\u9700\u8981\u5b8c\u6574\u7684\u63d0\u4ea4\u5386\u53f2\uff0c\u4e5f\u53ef\u4ee5\u4ece GitHub Releases \u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c\u538b\u7f29\u5305\u3002","title":"1. \u4e0b\u8f7d\u4ee3\u7801"},{"location":"getting_started/#2","text":"\u8fdb\u5165\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u4f7f\u7528 pip \u5b89\u88c5\u6240\u9700\u7684\u4f9d\u8d56\u5e93\u3002 cd proxy_pool pip install -r requirements.txt \u786e\u4fdd\u4f60\u7684 Python \u73af\u5883\u662f 3.6 \u6216\u66f4\u9ad8\u7248\u672c\u3002","title":"2. \u5b89\u88c5\u4f9d\u8d56"},{"location":"getting_started/#3","text":"\u9879\u76ee\u7684\u6838\u5fc3\u914d\u7f6e\u4f4d\u4e8e\u6839\u76ee\u5f55\u4e0b\u7684 setting.py \u6587\u4ef6\u4e2d\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539\u4ee5\u4e0b\u5173\u952e\u914d\u7f6e\uff1a # API \u670d\u52a1\u914d\u7f6e HOST = \"0.0.0.0\" # \u76d1\u542c\u7684 IP \u5730\u5740\uff0c0.0.0.0 \u8868\u793a\u5141\u8bb8\u6240\u6709 IP \u8bbf\u95ee PORT = 5010 # \u76d1\u542c\u7684\u7aef\u53e3\u53f7 # \u6570\u636e\u5e93\u914d\u7f6e (\u652f\u6301 Redis \u548c SSDB) # \u793a\u4f8b: # - Redis: redis://:password@ip:port/db # - Ssdb: ssdb://:password@ip:port DB_CONN = 'redis://@127.0.0.1:6379/0' # \u542f\u7528\u7684\u4ee3\u7406\u6293\u53d6\u5668 # \u6240\u6709\u53ef\u7528\u7684\u6293\u53d6\u5668\u90fd\u5b9a\u4e49\u5728 fetcher/proxyFetcher.py \u6587\u4ef6\u4e2d PROXY_FETCHER = [ \"freeProxy01\", \"freeProxy02\", # ... \u4f60\u53ef\u4ee5\u5728\u6b64\u6dfb\u52a0\u6216\u79fb\u9664\u6293\u53d6\u5668 ] \u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003 \u914d\u7f6e\u8be6\u89e3 \u9875\u9762\u3002","title":"3. \u4fee\u6539\u914d\u7f6e"},{"location":"getting_started/#4","text":"\u9879\u76ee\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a \u8c03\u5ea6\u5668 ( schedule ) : \u8d1f\u8d23\u4ece\u5404\u5927\u4ee3\u7406\u6e90\u7f51\u7ad9\u6293\u53d6\u3001\u6821\u9a8c\u548c\u5b58\u50a8\u4ee3\u7406\u3002 Web \u670d\u52a1 ( server ) : \u63d0\u4f9b HTTP API \u63a5\u53e3\uff0c\u4f9b\u5916\u90e8\u7a0b\u5e8f\u83b7\u53d6\u4ee3\u7406\u3002 \u4f60\u9700\u8981\u5206\u522b\u542f\u52a8\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u3002 \u542f\u52a8\u8c03\u5ea6\u5668\uff1a \u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8\u4ee3\u7406\u7684\u6293\u53d6\u548c\u6821\u9a8c\u4efb\u52a1\u3002 python proxyPool.py schedule \u542f\u52a8 API \u670d\u52a1\uff1a \u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8 Web API \u670d\u52a1\u3002 python proxyPool.py server \u670d\u52a1\u542f\u52a8\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee http://127.0.0.1:5010 \u6765\u67e5\u770b API \u7684\u57fa\u672c\u4fe1\u606f\u548c\u4f7f\u7528\u8bf4\u660e\u3002","title":"4. \u542f\u52a8\u9879\u76ee"}]}